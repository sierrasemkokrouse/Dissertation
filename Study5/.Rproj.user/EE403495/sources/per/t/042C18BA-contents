---
title: "01_Analyses_Study5"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r, warning = F, message = F, include = F}
library(psych)
library(ggplot2)
library(effsize)
library(dplyr)
library(kableExtra)
library(GPArotation)
library(stats)
library(plyr)
library(psych)
library(tidyverse)
library("Hmisc")
library(forcats)
library(grid)
library(ggcorrplot)
library(corrplot)
library(gridExtra)
library("ggdark")
library(broom)
library("effects")
library(lsmeans)
library(emmeans)
library(diagram)
library(pwr)
library(dplyr)
library(tidyr)
library(nlme)
library(rstatix)
library(multcomp)
library(lme4)
library(lmerTest)
library(cowplot)
library(report)
library(sjPlot)
library(lavaan)
library(lavaan)
library("corrplot")
library(dplyr)
library(GPArotation)
library(psych)
library(RcmdrMisc)
library(plot3D)
library(effectsize)
library(sjmisc)
```

```{r, warning = F, message = F, include = F}
theme_perez <- function() {
    ggplot2::theme_bw() +
    ggplot2::theme(
      axis.text = element_text(colour = "black",  family = "Times New Roman", size = 12),
    axis.title = element_text(colour = "black", family = "Times New Roman", size = 13),
    legend.title = element_text(colour = "black", family = "Times New Roman", size = 13),
    legend.text = element_text(colour = "black", family = "Times New Roman", size = 12),
    plot.title = element_text(colour = "black", family = "Times New Roman", size = 13),
    plot.subtitle = element_text(colour = "black", family = "Times New Roman", size = 13),
    strip.text = element_text(colour = "black", family = "Times New Roman", size = 13))
}

horzi_theme <- theme(    #   remove the gray background
  panel.background    = element_rect( size=.1, colour="black", fill="white") ,
  #   make the major gridlines light gray and thin
  panel.grid.major.y  = element_line( size=.1, colour="#666666" ) ,
  #   suppress the vertical grid lines
  panel.grid.major.x  = element_blank() ,
  #   suppress the minor grid lines
  panel.grid.minor    = element_blank() ,
  #   add axes
  axis.line           = element_line( size=.2 , colour="#666666" ),
  #   adjust the axis ticks
  axis.ticks          = element_line( size=.1 , colour="#666666" ),
  #   move the y-axis over to the left
  #axis.title.y        = element_text( angle=90, vjust=.5, hjust=.5 ),
  #   increase margin moved-over y-axis label fits
  # plot.margin = unit( c(.5,.25,.25,.5) , "in") ,
  title = element_text(  size=12 ) ,
  axis.title.x = element_text( size=12 ) ,
  axis.title.y = element_text( size=12 ) ,
  axis.text.x = element_text( size=12 ) ,
  axis.text.y = element_text( size=12 )
)

horzi <- horzi_theme

stat_sum_df <- function(fun, geom="crossbar", ...) {
  stat_summary(fun.data=fun, colour="black", geom=geom, width=.5,  ...)
}

# define the dodge object for equivalent error bar and geom_bar
dodge <- position_dodge(width=0.9)

# define a geom_bar
bars <- geom_bar(stat="summary", fun.y="mean", position="dodge")
```

```{r}
data <- read.csv("Data_Processed_Study5.csv")
data_wide <- read.csv("Data_Processed_Study5-Wide.csv")
```

```{r}
table(data$study)
```

# ns

```{r}
table(data_wide$conditionSES)
```

# Demographics

```{r}
psych::describe(data_wide$ladder_Self)
psych::describe(data_wide$income_Self)
psych::describe(data_wide$ed_Own)
table(data_wide$race_Self)
table(data_wide$gender_Self)
```

# SES Manipulation Check

```{r}
t.test(data_wide$ladder_Patient ~ data_wide$SES)
t.test(data_wide$income_Patient ~ data_wide$SES)
t.test(data_wide$ed_Patient ~ data_wide$SES)
```

# Lazy

```{r, echo=F, warning=F, message=F}
ggplot(data=data, aes(as.factor(strike), lazy, fill=conditionSES)) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  stat_sum_df("mean_se", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:5)) +
  scale_y_continuous(breaks=c(1:5)) +
  theme_perez() +
  scale_fill_grey() +
  xlab("Noncompliance Incident / 'Strike'") +
  ylab("Perceived Patient Laziness") +
  guides(fill=guide_legend(title="Patient SES")) +
  theme(legend.position="bottom") 

modLazy <- lmer(lazy ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + (1|ResponseId), data=data, na.action=na.omit)
anova(modLazy)
effectsize::eta_squared(modLazy, partial=T)
emmeans(modLazy, pairwise ~ conditionSES * strike)

modLazy <- lmer(lazy ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modLazy)

modLazy <- lmer(lazy ~ conditionSES * strike * conditionRace + ladder_Self + income_Self + study + ed_Own + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modLazy)

ggplot(data=data, aes(as.factor(gender_Self), lazy, fill=conditionSES)) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  stat_sum_df("mean_se", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:5)) +
  scale_y_continuous(breaks=c(1:5)) +
  theme_perez() +
  scale_fill_grey() +
  xlab("Noncompliance Incident / 'Strike'") +
  ylab("Perceived Patient Laziness") +
  guides(fill=guide_legend(title="Patient SES")) +
  theme(legend.position="bottom") 
```

# Honest

```{r, echo=F, warning=F, message=F}
ggplot(data=data, aes(factor(strike), honest, fill=conditionSES)) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  scale_y_continuous(breaks = c(1:5)) +
  stat_sum_df("mean_se", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  labs(x = "Noncompliance Incident / 'Strike'",
       y = "Perceived Patient Honesty",
       fill = "Patient SES") +
  theme_perez() +
  scale_fill_grey() +
  theme(legend.position="bottom") 

modHon <- lmer(honest ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + (1|ResponseId), data=data, na.action=na.omit)
anova(modHon)
effectsize::eta_squared(modHon, partial=T)
emmeans(modHon, pairwise ~ conditionSES * strike)
t.test(honest ~ conditionSES, data=data)

modHon <- lmer(honest ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modHon)

modHon <- lmer(honest ~ conditionSES * strike * conditionRace + ladder_Self + income_Self + study + ed_Own + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modHon)
```

# Exaggerate

```{r, echo=F, warning=F, message=F}
ggplot(data=data, aes(factor(strike), exaggerate, fill=conditionSES)) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  scale_y_continuous(breaks = c(1:5)) +
  stat_sum_df("mean_se", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  labs(x = "Noncompliance Incident / 'Strike'",
       y = "Perceived Patient Pain Exaggeration",
       fill = "Patient SES") +
  theme_perez() +
  scale_fill_grey() +
  theme(legend.position="bottom")

modExag <- lmer(exaggerate ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + (1|ResponseId), data=data, na.action=na.omit)
anova(modExag)
effectsize::eta_squared(modExag, partial=T)
emmeans(modExag, pairwise ~ conditionSES * strike)

modExag <- lmer(exaggerate ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modExag)

modExag <- lmer(exaggerate ~ conditionSES * strike * conditionRace + ladder_Self + income_Self + study + ed_Own + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modExag)
```

# Giving Up

```{r, echo=F, warning=F, message=F}
modGiveUp <- lmer(givingUp ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + (1|ResponseId), data=data, na.action=na.omit)
anova(modGiveUp)
effectsize::eta_squared(modGiveUp, partial=T)

modGiveUp <- lmer(givingUp ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + conditionRace + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modGiveUp)

modGiveUp <- lmer(givingUp ~ conditionSES * strike * conditionRace + ladder_Self + income_Self + study + ed_Own + gender_Self + race_Self + (1|ResponseId), data=data, na.action=na.omit)
anova(modGiveUp)
```

## Pred. by Change in Perceptions

```{r}
mod <- lm(givingUp_2 ~ lazy_2 + conditionSES + lazy_1 + income_Self + ladder_Self + ed_Own + conditionRace + study, data_wide)
summary(mod)
effectsize::eta_squared(mod, partial=T)

mod <- lm(givingUp_2 ~ honest_2 + conditionSES + honest_1 + income_Self + ladder_Self + ed_Own + conditionRace + study, data_wide)
summary(mod)
effectsize::eta_squared(mod, partial=T)

mod <- lm(givingUp_2 ~ exaggerate_2 * conditionSES + exaggerate_1 + income_Self + ladder_Self + ed_Own + conditionRace + study, data_wide)
summary(mod)
effectsize::eta_squared(mod, partial=T)
```

```{r}
data_wide$honest_change <- data_wide$honest_1 - data_wide$honest_2

data_wide$honIncrease <- case_when(data_wide$honest_change >= 1 ~ "1",
                              data_wide$honest_change == 0 ~ "0",
                              TRUE ~ "-1")

ggplot(data_wide, aes(honest_change, givingUp_2)) +
  geom_jitter(aes(colour=factor(honIncrease)), alpha=0.5) +
  stat_smooth(method="lm", color="#003f5c") +
  scale_x_continuous(breaks=c(-4:4)) +
  labs(x = "Change in Perceived Patient Honesty from Strike 1 to Strike 2",
       y = "Desire to 'Give Up' after Strike 2",
       title = "\U0394 Honesty \U2192 Giving Up",
       subtitle = "Meta-Analysis") +
  guides(colour=guide_legend(title="Direction\nof Change")) +
  scale_color_manual(values=c("#B3DFFF", "#768fe8", "#0a7cfc"), labels=c("Decrease", "No Change", "Increase")) +
  theme_perez() +
  theme(legend.position="bottom")

ggplot(data_wide, aes(honest_change, givingUp_2, fill=conditionSES)) +
  geom_jitter() +
  stat_smooth(method="lm") +
  scale_x_continuous(breaks=c(-2:4)) +
  labs(x = "Decrease in Perceived Patient Honesty",
       y = "Desire to 'Give Up' after Strike 2") +
  theme_perez() 

data_wide$exag_change <- data_wide$exaggerate_2 - data_wide$exaggerate_1

data_wide$exagIncrease <- case_when(data_wide$exag_change >= 1 ~ "1",
                              data_wide$exag_change == 0 ~ "0",
                              TRUE ~ "-1")

ggplot(data_wide, aes(exag_change, givingUp_2)) +
  geom_jitter(aes(colour=factor(exagIncrease)), alpha=0.5) +
  stat_smooth(method="lm", color="#003f5c") +
  scale_x_continuous(breaks=c(-4:4)) +
  labs(x = "Change in Perceived Pain Exaggeration from Strike 1 to Strike 2",
       y = "Desire to 'Give Up' after Strike 2",
       title = "\U0394 Pain Exaggeration \U2192 Giving Up",
       subtitle = "Meta-Analysis") +
  guides(colour=guide_legend(title="Direction\nof Change")) +
  scale_color_manual(values=c("#B3DFFF", "#768fe8", "#0a7cfc"), labels=c("Decrease", "No Change", "Increase")) +
  theme_perez() +
  theme(legend.position="bottom")

ggplot(data_wide, aes(exag_change, givingUp_2, fill=conditionSES)) +
  geom_jitter() +
  stat_smooth(method="lm") +
  scale_x_continuous(breaks=c(-3:4)) +
  labs(x = "Increase in Perceived Patient Pain Exaggeration",
       y = "Desire to 'Give Up' after Strike 2") +
  theme_perez() 

data_wide$lazy_change <- data_wide$lazy_2 - data_wide$lazy_1
data_wide$lazyIncrease <- case_when(data_wide$lazy_change >= 1 ~ "1",
                              data_wide$lazy_change == 0 ~ "0",
                              TRUE ~ "-1")

ggplot(data_wide, aes(lazy_change, givingUp_2)) +
  geom_jitter(aes(colour=factor(lazyIncrease)), alpha=0.5) +
  stat_smooth(method="lm", color="#003f5c") +
  scale_x_continuous(breaks=c(-4:4)) +
  labs(x = "Change in Perceived Patient Laziness from Strike 1 to Strike 2",
       y = "Desire to 'Give Up' after Strike 2",
       title = "\U0394 Laziness \U2192 Giving Up",
       subtitle = "Meta-Analysis") +
  guides(colour=guide_legend(title="Direction\nof Change")) +
  scale_color_manual(values=c("#B3DFFF", "#768fe8", "#0a7cfc"), labels=c("Decrease", "No Change", "Increase")) +
  theme_perez() +
  theme(legend.position="bottom")

ggplot(data_wide, aes(lazy_change, givingUp_2, fill=conditionSES)) +
  geom_jitter() +
  stat_smooth(method="lm") +
  scale_x_continuous(breaks=c(-3:4)) +
  labs(x = "Change in Perceived Patient Laziness from Strike 1 to Strike 2",
       y = "Desire to 'Give Up' after Strike 2") +
  theme_perez() +
  theme(legend.position="bottom")
```

# Treatment Decisions

```{r, echo=F, warning=F, message=F}
ggplot(data=data, aes(conditionSES, treatAvg, fill=factor(strike))) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  stat_sum_df("mean_cl_boot", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:4)) +
  scale_y_continuous(breaks=c(1:4), labels=c("1-Lowest\nTreatment\nIntensity","2","3","4-Highest\nTreatment\nIntensity")) +
  xlab("Patient SES") +
  ylab("Treatment Intensity") +
  theme_perez() +
  scale_fill_grey() +
  guides(fill=guide_legend(title="Noncompliance Incident / 'Strike'")) +
  theme(legend.position="bottom") +
  theme(axis.text.x=element_text(angle=15, vjust=.8, hjust=0.8))

modTreat <- lmer(treatAvg ~ conditionSES + strike + study + income_Self + ladder_Self + conditionRace + ed_Own + (1|ResponseId), data=data)
anova(modTreat)
effectsize::eta_squared(modTreat, partial=T)
emmeans(modTreat, pairwise ~ conditionSES)
emmeans(modTreat, pairwise ~ strike)

modTreat <- lmer(treatAvg ~ conditionSES + strike + study + income_Self + ladder_Self + conditionRace + ed_Own + gender_Self + (1|ResponseId), data=data)
anova(modTreat)

dataTreat <- data %>% filter(!is.na(treatAvg))
treatMeans <- tapply(dataTreat$treatAvg, dataTreat$study, mean)
treatMeans
```

# Additional Analyses

## Motivated

```{r, echo=F, warning=F, message=F}
modMotiv <- lmer(motivated ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + (1|ResponseId), data=data, na.action=na.omit)
anova(modMotiv)

ggplot(data=data, aes(conditionSES, motivated, fill=as.factor(strike))) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  stat_sum_df("mean_cl_boot", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:5)) +
  scale_y_continuous(breaks=c(1:5)) +
  theme_perez() +
  scale_fill_grey() +
  xlab("Patient SES") +
  ylab("Perception of Patient Motivation to Improve") +
  guides(fill=guide_legend(title="Noncompliance Incident / 'Strike'")) +
  theme(legend.position="bottom") +
  theme(axis.text.x=element_text(angle=15, vjust=.8, hjust=0.8))
```

## First Impression Severity

```{r}
modSevere <- lm(severe ~ conditionSES + study + income_Self + ladder_Self + ed_Own, data=data_wide)
anova(modSevere)

ggplot(data=data, aes(conditionSES, severe)) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  facet_wrap(~study) +
  stat_sum_df("mean_cl_boot", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:5)) +
  theme_perez() +
  scale_fill_grey() +
  xlab("Condition") +
  ylab("Initial Perceived Pain Severity") +
  theme(legend.position="bottom")
```

## Important that Health Improves

```{r, echo=F, warning=F, message=F}
modImport <- lmer(healthImproves ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + (1|ResponseId), data=data, na.action=na.omit)
anova(modImport)

modImport <- lmer(healthImproves ~ conditionRace + conditionSES * strike + ladder_Self + race_Self + income_Self + study + ed_Own + (1|ResponseId), data=data, na.action=na.omit)
anova(modImport)

modImport <- lmer(healthImproves ~ conditionSES + conditionRace * strike + ladder_Self + race_Self + income_Self + study + ed_Own +(1|ResponseId), data=data, na.action=na.omit)
anova(modImport)

modImport <- lmer(healthImproves ~ conditionSES + conditionRace + strike + ladder_Self + race_Self + income_Self + study + ed_Own +(1|ResponseId), data=data, na.action=na.omit)
anova(modImport)
```

## Should Have Been Clearer

```{r, echo=F, warning=F, message=F}
modClear <- lmer(clearer ~ conditionSES * strike + ladder_Self + income_Self + study + ed_Own + (1|ResponseId), data=data, na.action=na.omit)
anova(modClear)

modClear <- lmer(clearer ~ conditionRace + conditionSES * strike + ladder_Self + race_Self + income_Self + study + ed_Own + (1|ResponseId), data=data, na.action=na.omit)
anova(modClear)

modClear <- lmer(clearer ~ conditionSES + conditionRace * strike + ladder_Self + race_Self + income_Self + study + ed_Own +(1|ResponseId), data=data, na.action=na.omit)
anova(modClear)

modClear <- lmer(clearer ~ conditionSES + conditionRace + strike + ladder_Self + race_Self + income_Self + study + ed_Own +(1|ResponseId), data=data, na.action=na.omit)
anova(modClear)
```

## Attributions for Noncompliant Behavior

```{r, echo=F, warning=F, message=F}
ggplot(data=data, aes(conditionSES, attributions, fill=as.factor(strike))) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  stat_sum_df("mean_cl_boot", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:5)) +
  scale_y_continuous(breaks=c(1:5), labels=c('100%\nInternal', 'More Internal\nthan External', 'Neither', 'More External\nthan Internal', '100%\nExternal')) +
  theme_perez() +
  scale_fill_grey() +
  xlab("Condition") +
  ylab("Attributions for Behavior") +
  guides(fill=guide_legend(title="Noncompliance Incident / 'Strike'")) +
  theme(legend.position="bottom") +
  theme(axis.text.x=element_text(angle=15, vjust=.8, hjust=0.8))

modAttrib <- lmer(attributions ~ conditionRace + conditionSES * strike + ladder_Self + race_Self + income_Self + study + politics_Self + (1|ResponseId), data=data)
anova(modAttrib)

modAttrib <- lmer(attributions ~ conditionSES + conditionRace * strike + ladder_Self + race_Self + income_Self + study + politics_Self + (1|ResponseId), data=data)
anova(modAttrib)

modAttrib <- lmer(attributions ~ conditionSES + conditionRace + strike + conditionSES:conditionRace:strike + ladder_Self + race_Self + income_Self + study + politics_Self + (1|ResponseId), data=data)
anova(modAttrib)
```

## Perceived Likelihood of Health Insurance

```{r, echo=F, warning=F, message=F}
ggplot(data=data, aes(conditionSES, insurance_Patient)) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  stat_sum_df("mean_cl_boot", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:5)) +
  scale_y_continuous(breaks=c(1:5), labels=c("1-Very\nLikely","2-Somewhat\nLikely","3-Neither","4-Somewhat\nUnlikely","5-Extremely\nUnlikely")) +
  theme_perez() +
  scale_fill_grey() +
  xlab("Patient") +
  ylab("Perceived Likelihood of Health Insurance") +
  guides(fill=guide_legend(title="Noncompliance Incident / 'Strike'")) +
  theme(legend.position="bottom") +
  theme(axis.text.x=element_text(angle=15, vjust=.8, hjust=0.8))

anova(lm(insurance_Patient ~ conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study, data))

anova(lm(insurance_Patient ~ lazy * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study, data))

anova(lm(insurance_Patient ~ honest * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study, data))

anova(lm(insurance_Patient ~ exaggerate * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study, data))

anova(lm(insurance_Patient ~ givingUp * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study, data))

t.test(insurance_Patient ~ conditionSES, data)
t.test(insurance_Patient ~ conditionRace, data)
```

## Perceived Health Literacy

```{r, echo=F, warning=F, message=F}
ggplot(data=data, aes(patient, healthLit_Patient)) +
  geom_bar(stat="summary", fun.y="mean", position="dodge") +
  stat_sum_df("mean_cl_boot", geom = "errorbar", position= position_dodge(.9), conf.int=.68, width=0.2) +
  expand_limits(y=c(1:5)) +
  scale_y_continuous(breaks=c(1:5)) +
  theme_perez() +
  scale_fill_grey() +
  xlab("Patient") +
  ylab("Perceived Health Literacy") +
  guides(fill=guide_legend(title="Noncompliance Incident / 'Strike'")) +
  theme(legend.position="bottom") +
  theme(axis.text.x=element_text(angle=15, vjust=.8, hjust=0.8))

anova(lm(healthLit_Patient ~ conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study + ed_Own, data))

anova(lm(healthLit_Patient ~ lazy * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study + ed_Own, data))

anova(lm(healthLit_Patient ~ honest * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study + ed_Own, data))

anova(lm(healthLit_Patient ~ exaggerate * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study + ed_Own, data))

anova(lm(healthLit_Patient ~ givingUp * conditionSES + conditionRace + ladder_Self + race_Self + income_Self + study + ed_Own, data))

t.test(healthLit_Patient ~ conditionSES, data)
t.test(healthLit_Patient ~ conditionRace, data)
```

```{r}
t.test(data$severe ~ data$conditionSES)
t.test(data$healthLit_Patient ~ data$conditionSES)
```
